name: CI/CD

env:
  IS_RELEASE: startsWith(github.ref, 'refs/tags')

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - edited
      - released

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Tests
      run: |
        make test
    - name: Build Package (Prod)
      if: ${{ vars.IS_RELEASE }}
      run: |
        make build
    - name: Build Package (Dev)
      if: ! ${{ vars.IS_RELEASE }}
      run: |
        make build-dev
    - name: Zip Package (Prod)
      if: ${{ vars.IS_RELEASE }}
      run: |
        make release
    - name: Zip Package (Dev)
      if: ! ${{ vars.IS_RELEASE }}
      run: |
        make release-dev
    - name: Store build as an artifact (Prod)
      if: ${{ vars.IS_RELEASE }}
      uses: actions/upload-artifact@v3
      with:
        name: latest zip file
        path: ./releases/latest.zip
        retention-days: 30
    - name: Store build as an artifact (Dev)
      if: ! ${{ vars.IS_RELEASE }}
      uses: actions/upload-artifact@v3
      with:
        name: latest zip file
        path: ./releases/latest-dev.zip
        retention-days: 30
    - name: Create Release
      if: ${{ vars.IS_RELEASE }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: ${{ vars.IS_RELEASE }}
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./releases/latest.zip
        asset_name: latest.zip
        asset_content_type: application/zip
    - name: Upload to Chrome Web Store
      if: ${{ vars.IS_RELEASE }}
      run: |
        echo "would make publish"
      env:
        CHROME_ITEM_ID: ${{ vars.CHROME_ITEM_ID }}
        CHROME_TOKEN: ${{ secrets.CHROME_TOKEN }}
